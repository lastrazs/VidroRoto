// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VidroRoto.Data;

#nullable disable

namespace VidroRoto.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VidroRoto.Models.Client", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCliente"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCliente");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("VidroRoto.Models.Cotizacion", b =>
                {
                    b.Property<int>("IdCotizacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCotizacion"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int>("IdHerraje")
                        .HasColumnType("int");

                    b.Property<int>("IdMarco")
                        .HasColumnType("int");

                    b.Property<int>("IdVidrio")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecioTotal")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.HasKey("IdCotizacion");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdHerraje");

                    b.HasIndex("IdMarco");

                    b.HasIndex("IdVidrio");

                    b.ToTable("Cotizaciones");
                });

            modelBuilder.Entity("VidroRoto.Models.Herraje", b =>
                {
                    b.Property<int>("IdHerraje")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHerraje"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Precio")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("TipoHerraje")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdHerraje");

                    b.ToTable("Herrajes");
                });

            modelBuilder.Entity("VidroRoto.Models.Marco", b =>
                {
                    b.Property<int>("IdMarco")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMarco"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dimensiones")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Imagen")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Material")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Precio")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("TipoMarco")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdMarco");

                    b.ToTable("Marcos");
                });

            modelBuilder.Entity("VidroRoto.Models.Vidrio", b =>
                {
                    b.Property<int>("IdVidrio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVidrio"));

                    b.Property<string>("Caracteristicas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Grosor")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("TipoVidrio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdVidrio");

                    b.ToTable("Vidrios");
                });

            modelBuilder.Entity("VidroRoto.Models.Cotizacion", b =>
                {
                    b.HasOne("VidroRoto.Models.Client", "Cliente")
                        .WithMany("Cotizaciones")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VidroRoto.Models.Herraje", "Herraje")
                        .WithMany("Cotizaciones")
                        .HasForeignKey("IdHerraje")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VidroRoto.Models.Marco", "Marco")
                        .WithMany("Cotizaciones")
                        .HasForeignKey("IdMarco")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VidroRoto.Models.Vidrio", "Vidrio")
                        .WithMany("Cotizaciones")
                        .HasForeignKey("IdVidrio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Herraje");

                    b.Navigation("Marco");

                    b.Navigation("Vidrio");
                });

            modelBuilder.Entity("VidroRoto.Models.Client", b =>
                {
                    b.Navigation("Cotizaciones");
                });

            modelBuilder.Entity("VidroRoto.Models.Herraje", b =>
                {
                    b.Navigation("Cotizaciones");
                });

            modelBuilder.Entity("VidroRoto.Models.Marco", b =>
                {
                    b.Navigation("Cotizaciones");
                });

            modelBuilder.Entity("VidroRoto.Models.Vidrio", b =>
                {
                    b.Navigation("Cotizaciones");
                });
#pragma warning restore 612, 618
        }
    }
}
